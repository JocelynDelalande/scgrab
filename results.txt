The device being polled is an embedded wireless radio on a wirelessly trunked network - so do take these numbers with a grain of salt.

worst:

time snmpwalk -v1 -c ubnt 10.4.1.2 1.3.6.1.4.1.14988.1.1.1.1.1.3.7
iso.3.6.1.4.1.14988.1.1.1.1.1.3.7 = Gauge32: 13000000

real    0m0.129s
user    0m0.010s
sys     0m0.000s

best:

time snmpwalk -v1 -c ubnt 10.4.1.2 1.3.6.1.4.1.14988.1.1.1.1.1.3.7
iso.3.6.1.4.1.14988.1.1.1.1.1.3.7 = Gauge32: 13000000

real    0m0.054s
user    0m0.000s
sys     0m0.010s



worst (non-cached):

time python scgrab.py --host=10.4.1.2 --authcred=userpass.txt --plugin=ubnt-mcastatus --query=wlanRxRate --threshold=1
13.0
real    0m2.482s
user    0m0.230s
sys     0m0.090s

with ubnt-cputop disabled (non-cached):

time python scgrab.py --host=10.4.1.2 --authcred=userpass.txt --plugin=ubnt-mcastatus --query=wlanRxRate --threshold=1
13.0
real    0m1.472s
user    0m0.200s
sys     0m0.100s

using experimental libssh2 and ubnt-cputop disabled (non-cached):

time python scgrab-libssh2.py --host=10.4.1.2 --authcred=userpass.txt --plugin=ubnt-mcastatus --query=wlanRxRate --threshold=1
13.0
real    0m1.064s
user    0m0.030s
sys     0m0.040s


best (cached):

time python scgrab.py --host=10.4.1.2 --authcred=userpass.txt --plugin=ubnt-mcastatus --query=wlanRxRate --threshold=1000
13.0
real    0m0.065s
user    0m0.040s
sys     0m0.020s


The device need only respond once to the initial request for all data to be cached for the threshold period.
